
&НаСервере
Процедура ОбработатьФайлНаСервере(ИмяФайла)

	//Получаем текстовый документ
	Документ = Новый ТекстовыйДокумент;
	Документ.Прочитать(ИмяФайла); 
	
	
	//Построчный обход
	Для НомерСтроки = 2 по Документ.КоличествоСтрок() Цикл
		//Получить строку документа
		СтрокаДокумента = документ.ПолучитьСтроку(НомерСтроки);
		
		//Разделим значения разделынное ; в массив
		МассивЗначенийСтрок = СтрРазделить(СтрокаДокумента,";"); 
		
		//Получаем значение массива
		Номенклатура       = МассивЗначенийСтрок[0];
		Количество         = МассивЗначенийСтрок[1];
		ЦенаЗакупки        = МассивЗначенийСтрок[2];
		
		НоменклатураСсылка = Справочники.Номенклатура.НайтиПоНаименованию(Номенклатура,Истина);
		
		Если Не ЗначениеЗаполнено(НоменклатураСсылка) Тогда
			
			//Создаем элемент
			НовыйЭлемент                 = Справочники.Номенклатура.СоздатьЭлемент();
			НовыйЭлемент.Наименование    = Номенклатура;
			НовыйЭлемент.ЦенаЗакупки     = ЦенаЗакупки;
			НовыйЭлемент.Склад           = Объект.Склад;
			НовыйЭлемент.ВидНоменклатуры = Справочники.ВидыНоменклатуры.Товар;
			НовыйЭлемент.Записать();
			Номенклатура = НовыйЭлемент;
			
		Иначе
			Номенклатура = НоменклатураСсылка;	
		КонецЕсли; 
		
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.ЦенаЗакупки = ЦенаЗакупки;
		НоваяСтрока.Сумма = ЦенаЗакупки * Количество;
		
	КонецЦикла;
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	Объект.Автор = Пользователи.ТекущийПользователь(); 
	   		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзCSVФайла(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "CSV (*.csv)|*.csv"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь;	
	Диалог.Показать(Новый ОписаниеОповещения("ЗагрузитьФайлЗавершение", ЭтаФорма, Новый Структура("Диалог", Диалог)));	
	
КонецПроцедуры  

&НаКлиенте
Процедура ЗагрузитьФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог; 
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда				
			
		ОбработатьФайлНаСервере(Диалог.ПолноеИмяФайла);	
				
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура КопированиеДанныхДокумента(ДокументПриемник, ДокументИсточник, СвойстваВключаемые="", СвойстваИсключаемые="")

  //МетаданныеДокумента = ДокументИсточник.Метаданные();
   Попытка
       МетаданныеДокумента = ДокументИсточник.Метаданные();
   Исключение
       МетаданныеДокумента = ДокументПриемник.Метаданные();
   КонецПопытки;

   ЗаполнитьЗначенияСвойств(ДокументПриемник, ДокументИсточник);

   Для Каждого ТаблЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл
       ИмяТаблЧасти = ТаблЧасть.Имя;

       ДокументПриемник[ИмяТаблЧасти].Очистить();
       Для Каждого ТекСтрИсточника Из ДокументИсточник[ИмяТаблЧасти] Цикл
           НоваяСтрокаПриемника = ДокументПриемник[ИмяТаблЧасти].Добавить();
           ЗаполнитьЗначенияСвойств(НоваяСтрокаПриемника, ТекСтрИсточника)
       КонецЦикла;
   КонецЦикла;
   
  
КонецПроцедуры


&НаСервере
Функция СоздатьЗаказНаСервере()
	
	ДокументЗаказПоставщику = Документы.ЗаказПоставщику.СоздатьДокумент();
	КопированиеДанныхДокумента(ДокументЗаказПоставщику, Объект);
	ДокументЗаказПоставщику.Комментарий = "Документ создан обработкой автоматической загрузки товаров из CSV файла";
	ДокументЗаказПоставщику.Записать();
	Возврат ДокументЗаказПоставщику.Ссылка;
	
КонецФункции


&НаКлиенте
Процедура СоздатьЗаказ(Команда) 
	
	ПроверитьЗаполнение();
	
	Если Не ПроверитьЗаполнение() Тогда      
		Возврат;  
	КонецЕсли;
	
	Попытка
		ДокументЗаказПоставщику = СоздатьЗаказНаСервере();
		НавигационнаСсылка = ПолучитьНавигационнуюСсылку(ДокументЗаказПоставщику);
		ПоказатьОповещениеПользователя("Создан документ: ",
		                                НавигационнаСсылка,
		                   "С состоянием не проведенного!",
		                     БиблиотекаКартинок.Оповещения,						   
		               СтатусОповещенияПользователя.Важное,
		                               "ПервоеОповещение");	
	Исключение
		ПоказатьОповещениеПользователя("Ошибка создания документа",,
		                                           ОписаниеОшибки(),
		                              БиблиотекаКартинок.Оповещения,						   
		                        СтатусОповещенияПользователя.Важное,
		                                        "ПервоеОповещение");				  
	КонецПопытки;  
	
КонецПроцедуры

