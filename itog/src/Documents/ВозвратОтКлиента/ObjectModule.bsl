
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
    СуммаДокумента = Товары.Итог("Сумма");
	
	Если НЕ ЗначениеЗаполнено(Автор) Тогда
	Автор = Пользователи.ТекущийПользователь();	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		// Заполнение шапки
		Договор = ДанныеЗаполнения.Договор;
		Покупатель = ДанныеЗаполнения.Покупатель;
		Склад = ДанныеЗаполнения.Склад;
		Основание = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
			НоваяСтрока.ЦенаРеализации = ТекСтрокаТовары.Цена;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр ТоварыНаСкладах Приход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаТовары.Количество; 
		СтруктураСебестоимость = ЗаполнитьПартиюСебестоимость(ТекСтрокаТовары.Номенклатура);
		
		Если СтруктураСебестоимость.Количество() > 0 Тогда
			Движение.Сумма = СтруктураСебестоимость.Себестоимость1шт * ТекСтрокаТовары.Количество;
			Движение.Партия = СтруктураСебестоимость.Партия;
		Иначе
			Отказ = Истина;
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Ошибка расчета себестоимости, документ должен быть создан на основании реализации товаров";
			СообщениеПользователю.Сообщить();
		КонецЕсли;
		
	КонецЦикла;

	// регистр Хозрасчетный 
	Движения.Хозрасчетный.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.СчетДт = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
		Движение.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
		Движение.Период = Дата;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.КоличествоДт = ТекСтрокаТовары.Количество;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ТекСтрокаТовары.Номенклатура;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Покупатель;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Договоры] = Договор;
	КонецЦикла;

КонецПроцедуры

Функция ЗаполнитьПартиюСебестоимость(Номенклатура) 
	
	СтруктураСебестоимость = Новый Структура();
	
	Если ЗначениеЗаполнено(Основание) Тогда
		
		СтруктураСебестоимость.Вставить("Партия");
		СтруктураСебестоимость.Вставить("Себестоимость1шт");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОбороты.СуммаРасход / ТоварыНаСкладахОбороты.КоличествоРасход КАК Себестоимость1шт,
		|	ТоварыНаСкладахОбороты.Партия КАК Партия
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Обороты(, , Регистратор, ) КАК ТоварыНаСкладахОбороты
		|ГДЕ
		|	ТоварыНаСкладахОбороты.Регистратор = &Регистратор
		|	И ТоварыНаСкладахОбороты.Номенклатура = &Номенклатура";
		
		Запрос.УстановитьПараметр("Регистратор", Основание);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		ТЗДанные = Запрос.Выполнить().Выгрузить();
		
		Если ТЗДанные.Количество()>0 Тогда
			ЗаполнитьЗначенияСвойств(СтруктураСебестоимость,ТЗДанные[0]);
		КонецЕсли;
		
		
	КонецЕсли; 
	
	Возврат СтруктураСебестоимость;
	
КонецФункции
