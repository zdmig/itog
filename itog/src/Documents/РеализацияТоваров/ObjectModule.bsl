
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
СуммаДокумента = Товары.Итог("Сумма");	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим) 
	
	
	// регистр ТоварыНаСкладах Расход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	// регистр Прибыль 
	Движения.Прибыль.Записывать = Истина;
	// регистр Хозрасчетный 
	Движения.Хозрасчетный.Записывать = Истина;
	// регистр Продажи
	Движения.Продажи.Записывать = Истина;
	
		
		Движения.ТоварыНаСкладах.Записать();
		Движения.Хозрасчетный.Записать();
		Движения.Продажи.Записать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровТовары.Количество) КАК Количество,
		|	СУММА(РеализацияТоваровТовары.Сумма) КАК Сумма,
		|	РеализацияТоваровТовары.Ссылка.Дата КАК Дата
		|ПОМЕСТИТЬ ВТ_ДокТЧ
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|ГДЕ
		|	РеализацияТоваровТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровТовары.Номенклатура,
		|	РеализацияТоваровТовары.Ссылка.Дата
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДокТЧ.Номенклатура КАК Номенклатура,
		|	ВТ_ДокТЧ.Номенклатура.Представление КАК НоменклатураПредставление,
		|	ВТ_ДокТЧ.Количество КАК Количество,
		|	ВТ_ДокТЧ.Сумма КАК Сумма,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ТоварыНаСкладахОстатки.Партия КАК Партия
		|ИЗ
		|	ВТ_ДокТЧ КАК ВТ_ДокТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ВТ_ДокТЧ.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТ_ДокТЧ КАК ВТ_ДокТЧ)
		|					И Склад = &Склад) КАК ТоварыНаСкладахОстатки
		|		ПО ВТ_ДокТЧ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ДокТЧ.Дата УБЫВ,
		|	Партия УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	МАКСИМУМ(Сумма),
		|	СУММА(КоличествоОстаток),
		|	СУММА(СуммаОстаток)
		|ПО
		|	Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Если МетодСписания() = Перечисления.МетодыСписания.FIFO Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"Партия УБЫВ","Партия");
		КонецЕсли;
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		
		
		Пока ВыборкаНоменклатура.Следующий() И ВыборкаНоменклатура.Количество > 0 Цикл 
			
			Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда
				Разница = ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоОстаток; 
				Сообщить("Обнаружены отрицательные остатки номенклатуры " + ВыборкаНоменклатура.НоменклатураПредставление+ "  недостаточно " + Разница+" шт.");			
				Отказ = Истина;	
				
			КонецЕсли;
			
			Если НЕ Отказ Тогда
				
				ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
				ОсталосьСписать = ВыборкаНоменклатура.Количество;
				СебестоимостьСписания = 0;
				Пока ВыборкаДетальныеЗаписи.Следующий() И ОсталосьСписать > 0 Цикл
					
					Движение = Движения.ТоварыНаСкладах.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					Движение.Склад = Склад;
					Движение.Количество = Мин(ОсталосьСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
					Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
					
					Если Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда	
						Движение.Сумма = ВыборкаДетальныеЗаписи.СуммаОстаток; 
					Иначе  					
						Движение.Сумма = (ВыборкаДетальныеЗаписи.СуммаОстаток / ВыборкаДетальныеЗаписи.КоличествоОстаток) * Движение.Количество;						
					КонецЕсли;	
					ОсталосьСписать = ОсталосьСписать - Движение.Количество; 
					СебестоимостьСписания = СебестоимостьСписания + Движение.Сумма;  		
				КонецЦикла;
				
				   	Движение2 = Движения.Прибыль.Добавить();
					Движение2.Период = Дата;
					Движение2.Номенклатура = ВыборкаНоменклатура.Номенклатура;
					Прибыль = (РаботаСКурсамиВалют.ПересчитатьВВалюту(ВыборкаНоменклатура.Сумма,Валюта,ОсновнаяВалюта(),Дата)) - СебестоимостьСписания;
					Движение2.Сумма = Прибыль;
				
					// регистр Продажи
					Движение3 = Движения.Продажи.Добавить();
					Движение3.Период = Дата;
					Движение3.Склад = Склад;
					Движение3.Номенклатура = ВыборкаНоменклатура.Номенклатура;
					Движение3.Менеджер = Автор;
					Движение3.Стоимость = РаботаСКурсамиВалют.ПересчитатьВВалюту(ВыборкаНоменклатура.Сумма,Валюта,ОсновнаяВалюта(),Дата);
					Движение3.Количество = ВыборкаНоменклатура.Количество;
					Движение3.Сумма = РаботаСКурсамиВалют.ПересчитатьВВалюту(ВыборкаНоменклатура.Сумма,Валюта,ОсновнаяВалюта(),Дата);
			КонецЕсли;		
		КонецЦикла; 
		
		
		//БУ
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровТовары.Количество) КАК Количество,
		|	СУММА(РеализацияТоваровТовары.Сумма) КАК Сумма,
		|	РеализацияТоваровТовары.Ссылка.Дата КАК Дата
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|ГДЕ
		|	РеализацияТоваровТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровТовары.Номенклатура,
		|	РеализацияТоваровТовары.Ссылка.Дата
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТовары.Номенклатура КАК Номенклатура,
		|	ВТТовары.Количество КАК Количество,
		|	ВТТовары.Сумма КАК Сумма,
		|	ЕСТЬNULL(ХозрасчетныйОстаткиПоСклИХар.КоличествоОстатокДт, 0) КАК КоличествоОстатокПоХар,
		|	ХозрасчетныйОстаткиПоСклИХар.Субконто3 КАК Субконто3,
		|	ЕСТЬNULL(ХозрасчетныйОстаткиПоВсем.КоличествоОстатокДт, 0) КАК КоличествоОстатокПоВсем,
		|	ЕСТЬNULL(ХозрасчетныйОстаткиПоВсем.СуммаОстатокДт, 0) КАК СуммаОстатокПоВсем,
		|	ВТТовары.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&МоментВремени,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах),
		|				&СубконтоТовары,
		|				Субконто1 В
		|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ВТТовары.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТТовары КАК ВТТовары)
		|					И Субконто2 = &Склад) КАК ХозрасчетныйОстаткиПоСклИХар
		|		ПО ВТТовары.Номенклатура = ХозрасчетныйОстаткиПоСклИХар.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&МоментВремени,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах),
		|				&СубконтоТовары,
		|				Субконто1 В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТТовары.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТТовары КАК ВТТовары)) КАК ХозрасчетныйОстаткиПоВсем
		|		ПО ВТТовары.Номенклатура = ХозрасчетныйОстаткиПоВсем.Субконто1
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТТовары.Дата УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	МАКСИМУМ(Сумма),
		|	СУММА(КоличествоОстатокПоХар),
		|	МАКСИМУМ(КоличествоОстатокПоВсем),
		|	МАКСИМУМ(СуммаОстатокПоВсем)
		|ПО
		|	Номенклатура";
		
		
		СубконтоТовары = Новый Массив;
		СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
		СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склады);
		СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Характеристики);
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("СубконтоТовары", СубконтоТовары);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстатокПоХар Тогда 
				
				Разница = ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоОстатокПоХар; 
				Сообщить("Обнаружены отрицательные остатки номенклатуры " + ВыборкаНоменклатура.НоменклатураПредставление+ "  недостаточно " + Разница+" шт.");			
				Отказ = Истина;	
				
			КонецЕсли; 
			
			Себестоимость1шт =  ВыборкаНоменклатура.СуммаОстатокПоВсем / ВыборкаНоменклатура.КоличествоОстатокПоВсем;
			
			Если НЕ Отказ Тогда
				
				ОсталосьСписать = ВыборкаНоменклатура.Количество;
								
				ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
					
					Движение = Движения.Хозрасчетный.Добавить();
					Движение.СчетДт = ПланыСчетов.Хозрасчетный.СебестоимостьПродаж;
					Движение.СчетКт = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
					Движение.Период = Дата;
					Движение.КоличествоКт = Мин(ОсталосьСписать, ВыборкаДетальныеЗаписи.КоличествоОстатокПоХар);
					
					Если Движение.КоличествоКт = ВыборкаДетальныеЗаписи.КоличествоОстатокПоВсем Тогда
						Движение.Сумма = ВыборкаДетальныеЗаписи.СуммаОстатокПоВсем;
					Иначе
						Движение.Сумма = Движение.КоличествоКт * Себестоимость1шт;
					КонецЕсли;
					
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаДетальныеЗаписи.Номенклатура;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаДетальныеЗаписи.Номенклатура;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Характеристики] = ВыборкаДетальныеЗаписи.Субконто3; 
					ОсталосьСписать = ОсталосьСписать - Движение.КоличествоКт;
					
				КонецЦикла;  
				
				
			КонецЕсли;	
		КонецЦикла;
		
		//Образование задолженности

		Для каждого Товар из Товары Цикл
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
		Движение.СчетКт = ПланыСчетов.Хозрасчетный.Выручка;
		Движение.Период = Дата;	
		Движение.КоличествоКт = Товар.Количество;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Характеристики] = Ссылка;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Покупатель;
		Движение.ВалютаДт = Валюта;
		Движение.Сумма = Товар.Сумма;
		КонецЦикла;
		
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		// Заполнение шапки
		Валюта = ДанныеЗаполнения.Валюта;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Склад = ДанныеЗаполнения.Склад;
		Основание = ДанныеЗаполнения.Ссылка;
		Для Каждого Товар Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Номенклатура = Товар.Номенклатура;
			НоваяСтрока.Количество = Товар.Количество;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		Покупатель = ДанныеЗаполнения.Покупатель;
		Валюта = ДанныеЗаполнения.Валюта;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Склад = ДанныеЗаполнения.Склад;
		Основание = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого Товар Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Номенклатура = Товар.Номенклатура;
			НоваяСтрока.Количество = Товар.Количество;
			НоваяСтрока.Цена = Товар.ЦенаРеализации;
			НоваяСтрока.Сумма = Товар.Сумма;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
