
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ДополнительныеНачисления
	Движения.ДополнительныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаДопНачисления Из ДопНачисления Цикл
		Движение1 = Движения.ДополнительныеНачисления.Добавить();
		Движение1.Сторно = Ложь;
		ПрошлыйМесяц = ДобавитьМесяц(Дата,-1);
		Движение1.ВидРасчета = ТекСтрокаДопНачисления.ВидНачисления;
		Движение1.ПериодРегистрации = НачалоМесяца(ПрошлыйМесяц);
		Движение1.БазовыйПериодНачало = НачалоМесяца(ПрошлыйМесяц);
		Движение1.БазовыйПериодКонец = КонецМесяца(ПрошлыйМесяц);
		Движение1.Сотрудник = ТекСтрокаДопНачисления.Сотрудник; 
		Движение1.Размер = ТекСтрокаДопНачисления.Размер; 
		Движение1.Результат = ТекСтрокаДопНачисления.Размер; 
	КонецЦикла;
    Движения.ДополнительныеНачисления.Записать();
	
	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидНачисления;
		Движение.ПериодДействияНачало = ТекСтрокаНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = ТекСтрокаНачисления.ДатаОкончания;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник; 
		Движение.График = ТекСтрокаНачисления.График;
	КонецЦикла; 
	Движения.ОсновныеНачисления.Записать();  
   
   //Оклад 
   ПересчитатьЗначенияРезультат(ПланыВидовРасчета.ОсновныеНачисления.Оклад);
      
   
   //Отпуск за свой счет
   ПересчитатьЗначенияРезультат(ПланыВидовРасчета.ОсновныеНачисления.ОтпускЗаСвойСчет);
 
   

КонецПроцедуры   

Процедура ПересчитатьЗначенияРезультат(ВидРасчета, Ставка=Неопределено) 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия, 0) КАК ФактДни,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниПериодДействия, 0) КАК ПланДни,
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОкладыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
	|			Регистратор = &Ссылка
	|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОкладыСотрудников.СрезПоследних(&Дата, ) КАК ОкладыСотрудниковСрезПоследних
	|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = ОкладыСотрудниковСрезПоследних.Сотрудник"; 
		
	Запрос.УстановитьПараметр("ВидРасчета", ВидРасчета);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 
	
	
	Для каждого СтрДвижение Из Движения.ОсновныеНачисления Цикл
		
		Если СтрДвижение.ВидРасчета <> ВидРасчета Тогда
			Продолжить;
		КонецЕсли; 
		
		ВыборкаДетальныеЗаписи.Сбросить();
		ВыборкаДетальныеЗаписи.НайтиСледующий(СтрДвижение.НомерСтроки,"НомерСтроки");
		
		Если ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			 
			ОкладСотрудника = ВыборкаДетальныеЗаписи.Оклад;
			
			Если ОкладСотрудника <> 0 Тогда
				
				СтрДвижение.Результат = ВыборкаДетальныеЗаписи.ФактДни / ВыборкаДетальныеЗаписи.ПланДни * ОкладСотрудника;
				СтрДвижение.Факт = ВыборкаДетальныеЗаписи.ФактДни;
				СтрДвижение.Размер = ОкладСотрудника;
				
			Иначе
				
				Сообщить("В строке" " "" " + СтрДвижение.НомерСтроки + " "" " "для сотрудника " + СтрДвижение.Сотрудник +" в регистре ""Оклады сотрудников"" не задан оклад!"); 
				Записать(РежимЗаписиДокумента.ОтменаПроведения);
				
			КонецЕсли;
			
		ИначеЕсли ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.ОтпускЗаСвойСчет Тогда 
			СтрДвижение.Результат = 0;
			СтрДвижение.Факт = ВыборкаДетальныеЗаписи.ФактДни;
			СтрДвижение.Размер = 0;
		Иначе		
			СтрДвижение.Результат = ВыборкаДетальныеЗаписи.ФактДни * Ставка;
			СтрДвижение.Факт = ВыборкаДетальныеЗаписи.ФактДни;
			СтрДвижение.Размер = Ставка;	
		КонецЕсли;
		
		
	КонецЦикла; 
	
	Движения.ОсновныеНачисления.Записать();
	
	
	
КонецПроцедуры  



Функция ОкладСотрудника(Сотрудник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОкладыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
		|ИЗ
		|	РегистрСведений.ОкладыСотрудников.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК ОкладыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(); 
	
	Оклад = Неопределено;
	
	Пока Выборка.Следующий() Цикл
	
	Оклад = Выборка.Оклад;	
	
	КонецЦикла;
	
	Возврат Оклад;  

КонецФункции 


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Автор) Тогда
		Автор = Пользователи.ТекущийПользователь();	
	КонецЕсли;
КонецПроцедуры

